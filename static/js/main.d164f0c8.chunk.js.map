{"version":3,"sources":["js/actions/index.js","js/constants/action-types.js","utils/Diceware.js","Components/Words.js","Components/WordButtons.js","constants.js","Components/CopyButton.js","Components/DownloadButton.js","Components/Info.js","Components/Footer.js","Components/App.js","serviceWorker.js","js/reducers/index.js","js/store/index.js","index.js"],"names":["newClick","payload","type","getRandomDiceRoll","rval","bits_needed","Math","ceil","log2","max","bytes_needed","mask","pow","byteArray","Uint8Array","window","crypto","getRandomValues","p","i","dice","number","diceDict","container","forEach","num","index","push","className","key","Words","word","numbers","useState","passphrase","setPassphrase","localNumber","setLocalNumber","words","setWords","useSelector","state","new_click","dispatch","useDispatch","useEffect","all_die","num_words","__","diceroll","_","dice_num","get_all_die","all_words","wordlist_obj","JSON","parse","stringify","eff_large_wordlist","diceRoll","element","dicerollStr","join","get_all_words","wordsArray","length","wordNumber","WordButtons","props","selectedNumber","maxNumberWords","setMaxNumberWords","minNumberWords","setMinNumberWords","wordButton","value","onClick","clickButton","buttons","mapButtons","disabled","CopyButton","connect","pass","React","open","setOpen","navigatorExists","setNavigatorExists","undefined","navigator","clipboard","handleTooltipClose","copyPass","textArea","writeText","document","createElement","body","appendChild","select","execCommand","removeChild","ClickAwayListener","onClickAway","Tooltip","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","title","arrow","DownloadButton","platform","indexOf","href","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","position","textAlign","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","paddingTop","paddingBottom","Info","classes","link","text","class","Modal","aria-labelledby","aria-describedby","Footer","id","App","Component","Boolean","location","hostname","match","initialState","rootReducer","action","Object","assign","store","createStore","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d164f0c8.chunk.js","sourcesContent":["import { ADD_PASS, CHANGE_NUMBER, NEW_CLICK } from \"../constants/action-types\";\r\n\r\nexport function addPass(payload) {\r\n  return { type: ADD_PASS, payload }\r\n};\r\nexport function changeNumber(payload) {\r\n  return { type: CHANGE_NUMBER, payload }\r\n};\r\nexport function newClick(payload) {\r\n  return { type: NEW_CLICK, payload }\r\n};","export const ADD_PASS = \"ADD_PASS\";\r\nexport const CHANGE_NUMBER = \"CHANGE_NUMBER\";\r\nexport const NEW_CLICK = \"NEW_CLICK\";","import eff_large_wordlist from \"../assets/eff_large_wordlist.json\"\r\n\r\nexport const get_all_die = (num_words) => {\r\n\r\n  let all_die = []\r\n  for (let __ = 0; __ < num_words; __++) {\r\n      let diceroll = []\r\n      for (let _ = 0; _ < 5; _++) {\r\n          let dice_num = getRandomDiceRoll();\r\n          dice_num++;\r\n          diceroll.push(dice_num)\r\n      }\r\n      all_die.push(diceroll)\r\n  }\r\n  return (\r\n    all_die\r\n  );\r\n}\r\n\r\nexport const get_all_words = (all_die) => {\r\n  const wordlist_obj = JSON.parse(JSON.stringify(eff_large_wordlist));\r\n  let all_words = []\r\n  let diceRoll = []\r\n\r\n  all_die.forEach(element => {\r\n    const dicerollStr = element.join(\"\")\r\n    diceRoll.push(dicerollStr)\r\n    all_words.push(wordlist_obj[dicerollStr])\r\n  });\r\n\r\n  return all_words;\r\n}\r\n\r\n// Copied from Diceware.prototype.random @ \r\n// https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\r\nconst getRandomDiceRoll = () => {\r\n  let rval = 0;\r\n  const max = 6;\r\n  const min = 0;\r\n  const range = max - min;\r\n  \r\n  const bits_needed = Math.ceil(Math.log2(range));\r\n  const bytes_needed = Math.ceil(bits_needed / 8);\r\n  const mask = Math.pow(2, bits_needed) - 1; \r\n  // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\r\n  \r\n  // Create byte array and fill with N random numbers\r\n  let byteArray = new Uint8Array(bytes_needed);\r\n  window.crypto.getRandomValues(byteArray);\r\n  \r\n  let p = (bytes_needed - 1) * 8;\r\n  for(let i = 0; i < bytes_needed; i++ ) {\r\n    rval += byteArray[i] * Math.pow(2, p);\r\n    p -= 8;   \r\n  }\r\n  \r\n  // Use & to apply the mask and reduce the number of recursive lookups\r\n  rval = rval & mask;\r\n  \r\n  if (rval >= range) {\r\n    // Integer out of acceptable range\r\n    return getRandomDiceRoll();\r\n  }\r\n  // Return an integer that falls within the range\r\n  return min + rval;\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addPass, newClick } from \"../js/actions/index\";\r\nimport {get_all_die, get_all_words} from '../utils/Diceware';\r\n\r\nconst word = (word, numbers, key) => {\r\n\treturn (\r\n\t\t<span key={key} className={\"mx-2 my-3 inline-block\"}>\r\n\t\t\t<div className={\"text-xl md:text-3xl font-bold\"}>\r\n\t\t\t\t{word}\r\n\t\t\t</div>\r\n\t\t\t<div className={\"text-base md:text-lg font-medium tracking-wide\"}>\r\n\t\t\t\t{dice(numbers)}\r\n\t\t\t</div>\r\n\t\t\t<div className={\"text-base md:text-lg font-medium tracking-wide\"}>\r\n\t\t\t\t{numbers}\r\n\t\t\t</div>\r\n\t\t</span>\r\n\t)\r\n}\r\n\r\n\r\nconst dice = (number) => {\r\n\tconst diceDict = {'1': '⚀', '2': '⚁', '3': '⚂', '4': '⚃', '5': '⚄', \r\n\t\t\t'6': '⚅'}\r\n\tlet container = []\r\n\tnumber.forEach((num, index)=>{\r\n\t\tcontainer.push(\r\n\t\t\t<span className={\"text-xl\"} key={index}>\r\n\t\t\t\t{diceDict[num]}\r\n\t\t\t</span>\r\n\t\t)\r\n\t})\r\n\treturn (\r\n\t\tcontainer\r\n\t)\r\n}\r\n\r\n\r\nexport const Words = () => {\r\n\tconst [passphrase, setPassphrase] = useState(\"\");\r\n\tconst [localNumber, setLocalNumber] = useState(0);\r\n\tconst [words, setWords] = useState(0);\r\n\r\n\tconst number = useSelector(state => state.number);\r\n\tconst new_click = useSelector(state => state.new_click);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(addPass(passphrase))\r\n\t  }, [passphrase]);\r\n\r\n\t\r\n\tif (localNumber !== number || new_click) {\r\n\t\t\r\n\t\tdispatch(newClick(false))\r\n\t\tsetLocalNumber(number)\r\n\t\tconst all_die = get_all_die(number)\r\n\t\tconst all_words = get_all_words(all_die)\r\n\t\tconst pass = all_words.join(\" \")\r\n\t\tsetPassphrase(pass);\r\n\t\r\n\t\tlet wordsArray = [];\r\n\t\tfor(let i = 0; i < all_words.length; i++) {\r\n\t\t\tlet wordNumber = word(all_words[i], all_die[i], i)\r\n\t\t\twordsArray.push(wordNumber)\r\n\t\t}\r\n\t\tsetWords(wordsArray)\r\n\t}\r\n\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className={\"words mb-8\"}>{words}</div>\r\n\t);\r\n\r\n}","import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeNumber } from \"../js/actions/index.js\";\r\nimport '../css/style.css';\r\nimport * as myConstClass from '../constants.js';\r\nimport { newClick } from \"../js/actions/index\";\r\n\r\n\r\nconst WordButtons = (props) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst selectedNumber = useSelector(state => state.number);\r\n\r\n\tconst [maxNumberWords, setMaxNumberWords] = useState(\r\n\t\tmyConstClass.MAX_NUM_WORDS\r\n\t);\r\n\r\n\tconst [minNumberWords, setMinNumberWords] = useState(\r\n\t\tmyConstClass.MIN_NUM_WORDS\r\n\t);\r\n\r\n\r\n\tconst mapButtons = () => {\r\n\t\tlet buttons = [];\r\n\t\tfor(let i = minNumberWords; i <= maxNumberWords; i++) {\r\n\t\t\tbuttons.push(wordButton(i))\r\n\t\t}\r\n\t\treturn buttons;\r\n\t}\r\n\r\n\tconst clickButton = (number) => {\r\n\t\tdispatch(changeNumber(number))\r\n\t\tdispatch(newClick(true))\r\n\t}\r\n\r\n\tconst wordButton = (number) => {\r\n\t\treturn (\r\n\t\t\t<button key={number} className={\"font-bold py-2 px-2 md:px-4 \" +\r\n\t\t\t\t\t\"border border-white-500 hover:text-purple-500 \" +\r\n\t\t\t\t\t\"hover:border-purple-500 rounded my-2 mx-1 \" +\r\n\t\t\t\t\t\"inline-block\" + (selectedNumber === number ? \r\n\t\t\t\t\t\" border-purple-600 text-purple-600\" : \"\")}\r\n\t\t\t\t\tvalue={number} onClick={() => clickButton(number)}>\r\n\t\t\t\t{number} words\r\n\t\t\t</button>\r\n\t\t)\r\n\t}\r\n\r\n\tconst increaseMax = () => {\r\n\t\tsetMaxNumberWords(maxNumberWords+1);\r\n\t}\r\n\r\n\tconst decreaseMin = () => {\r\n\t\tsetMinNumberWords(minNumberWords-1);\r\n\t}\r\n\r\n\tconst reloadMinMax = () => {\r\n\t\tsetMinNumberWords(myConstClass.MIN_NUM_WORDS);\r\n\t\tsetMaxNumberWords(myConstClass.MAX_NUM_WORDS);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={\"max-w-full\"}>\r\n\t\t\t\t{mapButtons()}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button className={\"font-bold py-1 md:py-2 \" +\r\n\t\t\t\t\t\t\"px-3 md:px-4 border hover:border-purple-500 \" +\r\n\t\t\t\t\t\t\"rounded my-2 mx-2 +.w-2\" + (minNumberWords <= 1 ? \r\n\t\t\t\t\t\t\" opacity-50 cursor-not-allowed\" : \"\")}\r\n\t\t\t\t\t\tonClick={decreaseMin}\r\n\t\t\t\t\t\tdisabled={minNumberWords <= 1}>\r\n\t\t\t\t\t-\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={\"font-bold py-1 md:py-2 px-3 md:px-4 \" +\r\n\t\t\t\t\t\t\"border hover:border-purple-500 rounded my-2 \" +\r\n\t\t\t\t\t\t\"mx-1 md:mx-2 .w-2\" + (minNumberWords === \r\n\t\t\t\t\t\tmyConstClass.MIN_NUM_WORDS && maxNumberWords === \r\n\t\t\t\t\t\tmyConstClass.MAX_NUM_WORDS ? \r\n\t\t\t\t\t\t\" opacity-50 cursor-not-allowed\" : \"\")}\r\n\t\t\t\t\t\tonClick={reloadMinMax}>\r\n\t\t\t\t\t↻\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"font-bold py-1 md:py-2 px-3 md:px-4 \r\n\t\t\t\t\t\tborder hover:border-purple-500 rounded my-2\r\n\t\t\t\t\t\tmx-1 md:mx-2 .w-2\"\r\n\t\t\t\t\t\tonClick={increaseMax}>\r\n\t\t\t\t\t+\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n\r\nexport default WordButtons;\r\n","export const MIN_NUM_WORDS = 5\r\nexport const MAX_NUM_WORDS = 8","import React, {useEffect} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport '../css/style.css';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { pass: state.pass };\r\n};\r\n\r\n\r\nconst CopyButtonPass = ({pass}) => {\r\n\t\r\n\tconst [open, setOpen] = React.useState(false);\r\n\tconst [navigatorExists, setNavigatorExists] = React.useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(navigator.clipboard === undefined) {\r\n\t\t\tsetNavigatorExists(false)\r\n\t\t}\r\n\t  }, [navigatorExists]);\r\n\r\n\tconst handleTooltipClose = () => {\r\n\t  setOpen(false);\r\n\t};\r\n  \r\n\tconst handleTooltipOpen = () => {\r\n\t  setOpen(true);\r\n\t};\r\n  \r\n\r\n\tconst copyPass = () => {\r\n\t\tif (navigatorExists) {\r\n\t\t\tnavigator.clipboard.writeText(pass)\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tlet textArea;\r\n\r\n\t\t\ttextArea = document.createElement('textArea');\r\n\t\t\ttextArea.value = pass;\r\n\t\t\tdocument.body.appendChild(textArea);\r\n\r\n\t\t\ttextArea.select()\r\n\t\t\tdocument.execCommand('copy');\r\n        \tdocument.body.removeChild(textArea);\r\n\t\t}\r\n\t\thandleTooltipOpen()\r\n\t}\r\n\r\n\t\r\n\treturn (\r\n\t\t<ClickAwayListener onClickAway={handleTooltipClose}>\r\n\t\t\t<div className={\"min-w-full\"}>\r\n\t\t\t\t<Tooltip\r\n\t\t\t\t\tPopperProps={{\r\n\t\t\t\t\tdisablePortal: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClose={handleTooltipClose}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tdisableFocusListener\r\n\t\t\t\t\tdisableHoverListener\r\n\t\t\t\t\tdisableTouchListener\r\n\t\t\t\t\ttitle=\"Copied\"\r\n\t\t\t\t\tarrow\r\n\t\t\t\t>\r\n\t\t\t\t\t<button className=\"font-bold py-2 px-2 md:px-4\r\n\t\t\t\t\t\t\thover:text-purple-500 hover:border-purple-500\r\n\t\t\t\t\t\t\trounded my-2 mx-2 .w-2 text-sm border\"\r\n\t\t\t\t\t\tonClick={() => {copyPass()}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCopy Passphrase\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</div>\r\n\t\t</ClickAwayListener>\r\n\t);\r\n}\r\n\r\nconst CopyButton = connect(mapStateToProps)(CopyButtonPass);\r\n\r\nexport default CopyButton;\r\n","import React from 'react';\r\nimport '../css/style.css';\r\n\r\n\r\nconst DownloadButton = ({pass}) => {\r\n\r\n    if (navigator.platform.indexOf('Win') > -1){\r\n        return (\r\n            <a href={\"https://github.com/robmcelhinney/\" +\r\n                    \"diceware/releases/latest\"}>\r\n                <button className=\"download-button font-bold py-2 px-2 \r\n                        md:px-4 bg-white rounded mt-20 my-2 mx-2 .w-2 \r\n                        text-sm border\"\r\n            >\r\n                Download Windows App\r\n            </button>\r\n            </a>\r\n        );\r\n    }\r\n    else {\r\n        return (null)\r\n    }\r\n\t\r\n}\r\n\r\nexport default DownloadButton;\r\n","import React from 'react';\r\nimport '../css/style.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n      position: 'absolute',\r\n      textAlign: 'left',\r\n      width: '80%',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      paddingTop: '2em',\r\n      paddingBottom: '2em',\r\n    },\r\n  }));\r\n\r\n\r\nconst Info = ({pass}) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const link = (link, text) => {\r\n        return (\r\n            <a class=\"text-blue-500 hover:text-blue-800\" href={link}>{text}</a>\r\n        )\r\n    }\r\n    \r\n    const body = (\r\n        <div className={classes.paper}>\r\n            <p className={\"text-lg font-semibold mb-2\"}>What's Diceware?</p>\r\n            <div>\"Diceware is a method for creating passphrases, \r\n                    passwords, and other cryptographic variables \r\n                    using ordinary dice as a hardware random \r\n                    number generator\" {link(\r\n                    \"https://en.wikipedia.org/wiki/Diceware\", \r\n                    \"- Wiki\")}</div>\r\n            <div>Read more about password Dice generated passwords from \r\n                    the {link(\"https://www.eff.org/dice\", \"EFF\")}.</div>\r\n            \r\n            <p className={\"text-lg font-semibold mt-3 mb-2\"}>What \r\n                    list is used?</p>\r\n            <div>{link(\"https://www.eff.org/files/2016/07/18/\" +\r\n                    \"eff_large_wordlist.txt\", \"EFF Large Word List\")} I \r\n                    converted this list into a json file to make it easier \r\n                    to import.</div>\r\n\r\n            <p className={\"text-lg font-semibold mt-3 mb-2\"}>\r\n                    Should I trust this site?</p>\r\n            <div>Probably not, but it is open source so please have a look \r\n                    at the {link(\"https://github.com/robmcelhinney/diceware/\", \r\n                    \"code on github\")}. If you spot any issues, let me know \r\n                    or make a pull request.</div>\r\n            <div>It is always better to use real dice to verify the \r\n                    randomness yourself but that's a lot of hassle so here \r\n                    we are.</div>\r\n            \r\n            <p className={\"text-lg font-semibold mt-3 mb-2\"}>\r\n                How is randomness verified?</p>\r\n            <div>The {link(\"https://developer.mozilla.org/en-US/docs/Web/\" +\r\n                    \"API/Crypto\", \"Web Crypto API's\")} Window.Crypto.getRandom \r\n                    which was copied from the {link(\r\n                    \"https://github.com/EFForg/OpenWireless/blob\" +\r\n                    \"/master/app/js/diceware.js\", \"EFF\")}.</div>\r\n            \r\n            <p className={\"text-lg font-semibold mt-3 mb-2\"}>\r\n                Are you saving any data?</p>\r\n            <div>All code is completely run on the client side so it's \r\n                    staying on your device. If you use Windows you can \r\n                    download this site as a program to use it completely \r\n                    offline.</div>\r\n        </div>\r\n    );\r\n\r\n\treturn (\r\n        <>\r\n        <a class=\"text-blue-500 hover:text-blue-800\" href={\"javascript:void(0);\"} \r\n                onClick={handleOpen}>More Info</a>\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            className={classes.modal}\r\n        >\r\n            {body}\r\n        </Modal>\r\n        </>\r\n\t);\r\n}\r\n\r\nexport default Info;\r\n","import React from 'react';\r\nimport '../css/style.css';\r\nimport Info from './Info';\r\n\r\n\r\nconst Footer = ({pass}) => {\r\n\r\n\treturn (\r\n        <div id={\"footer\"}>\r\n            Inspired by <a class=\"text-blue-500 hover:text-blue-800\" href={\"https://diceware.herokuapp.com/\"}>Michael Henriksen</a> | <Info /> | Created by <a class=\"text-blue-500 hover:text-blue-800\" href={\"https://twitter.com/RMcElhinney\"}>Rob McElhinney</a>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport '../css/style.css';\r\nimport {Words} from './Words';\r\nimport WordButtons from './WordButtons';\r\nimport CopyButton from './CopyButton';\r\nimport DownloadButton from './DownloadButton';\r\nimport Footer from './Footer';\r\n\r\nclass App extends React.Component {\r\n\r\n    render() {\r\n          return (\r\n              <div className=\"App\">\r\n                    <div id={\"content-wrap\"} className={\"min-w-full\"}>\r\n                        <Words />\r\n                        <WordButtons />\r\n                        <CopyButton />\r\n                        <DownloadButton />\r\n                    </div>\r\n                    <Footer />\r\n              </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_PASS, CHANGE_NUMBER, NEW_CLICK } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n    pass: \"\",\r\n    number: 8,\r\n    new_click: true\r\n};\r\n  \r\nfunction rootReducer(state = initialState, action) {\r\n    if (action.type === ADD_PASS) {\r\n        return Object.assign({}, state, {\r\n            pass: action.payload\r\n          });\r\n    }\r\n    if (action.type === CHANGE_NUMBER) {\r\n        return Object.assign({}, state, {\r\n            number: action.payload\r\n          });\r\n    }\r\n    if (action.type === NEW_CLICK) {\r\n        return Object.assign({}, state, {\r\n            new_click: action.payload\r\n          });\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/main.css'\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './js/store/index';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}